<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chenyoupu.top</id>
    <title>陈有朴</title>
    <updated>2023-09-28T13:35:33.855Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chenyoupu.top"/>
    <link rel="self" href="https://chenyoupu.top/atom.xml"/>
    <subtitle>Hi，这里是有朴的第二大脑。很高兴与你相遇</subtitle>
    <logo>https://chenyoupu.top/images/avatar.png</logo>
    <icon>https://chenyoupu.top/favicon.ico</icon>
    <rights>All rights reserved 2023, 陈有朴</rights>
    <entry>
        <title type="html"><![CDATA[看懂R背后的运行，我五分钟解决了别人一天才能解决的问题]]></title>
        <id>https://chenyoupu.top/post/看懂R背后的运行，我五分钟解决了别人一天才能解决的问题/</id>
        <link href="https://chenyoupu.top/post/看懂R背后的运行，我五分钟解决了别人一天才能解决的问题/">
        </link>
        <updated>2023-06-10T07:21:19.000Z</updated>
        <content type="html"><![CDATA[<h1 id="看懂r背后的运行我五分钟解决了别人一天才能解决的问题">看懂R背后的运行，我五分钟解决了别人一天才能解决的问题</h1>
<p>基于Rscript来直接运行脚本，实际上会存在内存上限的问题（一般出现在tidyverse merge数据的过程中），但是在Linux环境下设置运行内存上限的方法和Win是不一样的，我就用一行代码帮助小伙伴解决了一丢丢小问题，</p>
<pre><code class="language-r">library(unix)
rlimit_as(1e13) # approximately 120G
</code></pre>
<p>结果：三分钟解决问题。。</p>
<p>周末继续总结继续学习继续看文献。</p>
<p>‍</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「R | parallel」第一篇｜gene level的FST计算]]></title>
        <id>https://chenyoupu.top/post/R  parallel  第一篇/</id>
        <link href="https://chenyoupu.top/post/R  parallel  第一篇/">
        </link>
        <updated>2023-05-15T13:00:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="写在前面">写在前面</h2>
<ul>
<li>聊聊我自己。群体遗传学研究的对象是allele，而针对一个population，就算是一个population，其内部存在的variants也是相当多的（由于genetic drift的影响），所以要处理的下游数据难免就会呈现records多到“上天”的情况</li>
</ul>
<p>‍</p>
<h2 id="r-parallel的使用">R | parallel的使用</h2>
<p>虽然R语言是一门针对统计学的语言，但并不就代表它不可以实现最基本的计算功能，multiprocessing。</p>
<p>需要使用的packages，<code>parallel</code>​。</p>
<p>就拿我自己做的分析来举例：</p>
<ul>
<li>现存一个vcftools计算得到的FST结果文件，分别记录了从chromosome1到chromosome21的per-site FST计算结果；</li>
<li>我的reference gene BED从UCSC Genome Table Browser下载得到，从共记录了两万多条gene records</li>
</ul>
<p>如何计算得到每一个gene的FST？</p>
<p>前提条件说了很多了，只是为了希望做分析的人能够理解这个问题。</p>
<p>但是在给出自己的代码之前，先给出R parallel的基本使用。</p>
<h3 id="r-parallele-multiprocessing">R | parallele | multiprocessing</h3>
<p>直接使用multiprocessing方法时，不需要自行创建cluster来预设对应包含线程数的sockets，而用起来就像lapply一样，但是与其不同的是，lapply是将所有的函数依次应用到输入的每一个list上，而multiprocessing的lapply则是同时发动所有的任务，</p>
<p>使用函数，</p>
<ul>
<li>mclapply()</li>
<li>mcmapply()</li>
</ul>
<h3 id="r-parallele-sockets">R | parallele | sockets</h3>
<ul>
<li>sockets类型的multiprocessing与上述提到的基本方法，在使用上的不同需要首先创建一个clusters，同时在完成运算之后需要释放这个cluster，</li>
<li>同时还需要将应用的数据export到cluster中</li>
</ul>
<pre><code class="language-r">cluster_1 &lt;- makeCluster(16)  # 可以使用detectCores()来检测总共有多少个核
stopCluster(cluster_1)
</code></pre>
<p>‍</p>
<h2 id="r-我的population-genetics实战">R | 我的population genetics实战</h2>
<ul>
<li>
<p>核心模块，</p>
<p><code>chr.vector</code>​，是包含了chr1tochr22的chromosome tag的向量，需要先将其输出到cluster，才能够应用于cluster计算</p>
<p><strong>但是我还存在的疑问：为什么input_df和gene_bed就不export就不会报错了呢</strong>？</p>
<blockquote>
<p>Note：这里的理解，就好比神经网络模型使用CUDA时，也需要将对应张量加载到GPU上</p>
</blockquote>
<pre><code class="language-r">parLapply(cluster_1, chr.vector, df = input_df, fun = function(input_df, chr_number, gene_bed){
  # retrieve output dataset using chromosome tag {1..21} to split the FST dataset
  chr_number_input_df &lt;- input_df %&gt;% filter(chr==chr_number)
  ...
}
</code></pre>
</li>
</ul>
<pre><code class="language-r">cluster_1 &lt;- makeCluster(16) # using 16 cores to speed up the FST calculation process.
clusterExport(cluster_1, &quot;chr.vector&quot;)  # export chromosome vector the sockets

# 
FST_list &lt;- parLapply(cluster_1, chr.vector, df = input_df, fun = function(input_df, chr_number, gene_bed){
  # retrieve output dataset using chromosome tag {1..21} to split the FST dataset
  chr_number_input_df &lt;- input_df %&gt;% filter(chr==chr_number)
  new_chr_number_input_df = chr_number_input_df %&gt;% left_join(gene_bed, by=c(&quot;chr&quot;))
  
  # only save the validated records
  new_chr_number_input_df &lt;- new_chr_number_input_df %&gt;% filter((pos &gt;= start_pos &amp; pos &lt;= end_pos))
  
  # using 0 to replace negative value
  new_chr_number_input_df$weight_FST[new_chr_number_input_df$weight_FST &lt; 0] &lt;- 0

  # calculate FST for each gene
  cal_df &lt;- new_chr_number_input_df %&gt;% 
              group_by(gene) %&gt;%
              summarize(
                Mean_Fst = mean(weight_FST, na.rm = TRUE)
              )
  return(cal_df)
})

# close cluster
stopCluster(cluster_1)
</code></pre>
<h2 id="推荐阅读">推荐阅读</h2>
<ul>
<li>
<p><a href="https://bookdown.org/rdpeng/rprogdatascience/parallel-computation.html">bookdown.org/rdpeng/rpro...</a></p>
</li>
<li>
<p><a href="https://www.r-bloggers.com/2019/06/parallel-r-socket-or-fork/">www.r-bloggers.com/2019/...</a></p>
<p>创建sockets还可以使用不同的模式。。</p>
</li>
</ul>
<p>‍</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「Population Genetics」002｜FST - By Weir and Cockerham]]></title>
        <id>https://chenyoupu.top/post/popgen_FST/</id>
        <link href="https://chenyoupu.top/post/popgen_FST/">
        </link>
        <updated>2023-05-10T01:04:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="weir-and-cockerham-weighted-f_st计算公式">Weir and Cockerham | Weighted <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>计算公式</h2>
<p>Wright提出的FST原始版本，并没有考虑到sample size对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>计算的影响，因此才有了之后Weir and Cockerham对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>计算的改进。</p>
<p>而在展开介绍Weir和Cockerhem是如何计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>之前，先看看Wright是如何计算，</p>
<ul>
<li>F，the correlation of genes within individuals（inbreeding）</li>
<li>θ，the correlation of genes of different individuals in the same population</li>
<li>f，the correlation of genes within individuals within populations</li>
</ul>
<p>θ，即指代<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
<p>在WC <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> estimator中，其计算公式如下，</p>
<figure data-type="image" tabindex="1"><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230510091606-kbn76p8.png" alt="" loading="lazy"></figure>
<blockquote>
<p>Note：该版本计算得到的FST，与vcftools略有不同，尚且认为是自己写作了吧。</p>
</blockquote>
<p>但是上述文献中最终给出的，也仅仅是FST的最终计算公式，没有给出一个更加详尽的推导。</p>
<p>‍</p>
<h2 id="weir-f_st推导">Weir | <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>推导</h2>
<p>如下的理解来自02年Weir发表对应文献/tutorial。</p>
<p>首选需要阐明的几个点，</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">θ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），从最简单的意义上可以理解为两个allele来自同一个ancestor的概率，即IBD（identity by descent），但是更为直观的general，则为从任意一个或不同的population中抽样得到两个allele，他们之间的correlation coefficient</li>
</ul>
<p>1）假设现在一个sample中，第j个allele，若其碱基类型为μ，则等于1；若其碱基类型不为μ，则等于0。用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>j</mi><mi>μ</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{jμ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>来表示，</p>
<p><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230514161214-yv1gxqc.png" alt="" loading="lazy">​</p>
<p>那么现在针对期望population allele frequency为如下的形式，</p>
<blockquote>
<p>Note：此处公式存在一点问题（个人角度），应该论述为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi><mo>(</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mi>i</mi></mrow><mi>n</mi></msubsup><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub></mrow><mi>n</mi></mfrac><mo>)</mo><mo>=</mo><msub><mi>p</mi><mi>μ</mi></msub></mrow><annotation encoding="application/x-tex">ε(\frac{\sum_{n=i}^{n}x_{ju}}{n})=p_{μ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.405007em;vertical-align:-0.345em;"></span><span class="mord mathdefault">ε</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.060007em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5350070000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.1785614285714283em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32143857142857146em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p>
</blockquote>
<figure data-type="image" tabindex="2"><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230514161501-9aaohyw.png" alt="" loading="lazy"></figure>
<ul>
<li>
<p>ε，代表<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>(</mo><mi>X</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">E(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mtext> </mtext><mtext> </mtext><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi></mrow></msub><mo>)</mo><mo>=</mo><mi>E</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mtext> </mtext><mtext> </mtext><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi></mrow></msub><mo>)</mo><mo>=</mo><mi>E</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo>)</mo><mi>E</mi><mo>(</mo><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi><mo>)</mo></mrow></msub><mo>)</mo><mo>+</mo><mi>C</mi><mi>o</mi><mi>v</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">ε(x_{ju}\,\,x_{j^{&#x27;}μ}) = E(x_{ju}\,\,x_{j^{&#x27;}μ}) = E(x_{ju})E(x_{j^{&#x27;}μ)}) + Cov(x_{ju},x_{j^{&#x27;}μ})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.166288em;vertical-align:-0.416288em;"></span><span class="mord mathdefault">ε</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4198200000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.416288em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.166288em;vertical-align:-0.416288em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4198200000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.416288em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20518em;vertical-align:-0.45518em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.41982em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45518em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.166288em;vertical-align:-0.416288em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4198200000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.416288em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo>=</mo><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{ju}=x_{j^{&#x27;}μ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.846848em;vertical-align:-0.416288em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4198200000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.416288em;"><span></span></span></span></span></span></span></span></span></span>，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi></mrow></msub><mo>)</mo><mo>=</mo><mi>V</mi><mi>a</mi><mi>r</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo>)</mo><mo>=</mo><msub><mi>p</mi><mi>μ</mi></msub><mo>(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>μ</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">Cov(x_{ju},x_{j^{&#x27;}μ})=Var(x_{ju})=p_{μ}(1-p_{μ})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.166288em;vertical-align:-0.416288em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4198200000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.416288em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但是因为两者不相等，所以需要用θ来平衡他们之间的关系，而从生物学意义的角度来理解，</p>
<p>若第j位和第j'位之间，完全不存在联系，完全不可能是IBD，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ε</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mtext> </mtext><mtext> </mtext><msub><mi>x</mi><mrow><msup><mi>j</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mi>μ</mi></mrow></msub><mo>)</mo><mo>=</mo><mi>E</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo>)</mo><mo separator="true">⋅</mo><mi>E</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>j</mi><mi>u</mi></mrow></msub><mo>)</mo><mo>=</mo><msubsup><mi>p</mi><mi>μ</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">ε(x_{ju}\,\,x_{j^{&#x27;}μ}) = E(x_{ju})·E(x_{ju}) = p_{μ}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.166288em;vertical-align:-0.416288em;"></span><span class="mord mathdefault">ε</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4198200000000005em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8928285714285715em;"><span style="top:-2.8928285714285713em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.6068285714285713em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8495600000000001em;"><span style="top:-2.84956em;margin-right:0.1em;"><span class="pstrut" style="height:2.55556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.416288em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>若第j位和第j'位之间，在一定程度上是IBD，则需要接着考虑θ。</p>
</li>
</ul>
<p>2）但是现在不从一个sample的角度考虑，而是从2个population之间的角度考虑，</p>
<blockquote>
<p>Note：若前提为non-random mating，则说明两个群体之间存在了divergence、isolation等</p>
</blockquote>
<figure data-type="image" tabindex="3"><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230514162413-69g628m.png" alt="" loading="lazy"></figure>
<p>因此，此时的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">θ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>进一步引申为了衡量population differentiation的指标。</p>
<p>而针对sample allele frequency则由如下的公式计算得到，</p>
<figure data-type="image" tabindex="4"><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230514170116-8k040kc.png" alt="" loading="lazy"></figure>
<p>且由于不同population size，抽样得到的sample计算出来的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>p</mi><mo>~</mo></mover><mi>μ</mi></msub></mrow><annotation encoding="application/x-tex">\tilde{p}_{μ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9539679999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6678599999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">~</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>存在偏差（Nicolas提出其服从参数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>u</mi></msub><mi mathvariant="normal">，</mi><msub><mi>π</mi><mi>μ</mi></msub><mo separator="true">⋅</mo><msub><mi>θ</mi><mi>μ</mi></msub></mrow><annotation encoding="application/x-tex">p_{u}，π_{μ}·θ_{μ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的正态分布）</p>
<p>而Weir于1984年提出的Weighted <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>S</mi><mi>T</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{ST}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，为了消除不同population size对衡量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">θ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>的影响，构建了如下的两个平方差，</p>
<figure data-type="image" tabindex="5"><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230514170220-05hbw5b.png" alt="" loading="lazy"></figure>
<p>最终<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mrow><mi>M</mi><mi>μ</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{θ}_{Mμ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2439879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mord mathdefault mtight">μ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>则表示为，</p>
<figure data-type="image" tabindex="6"><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230514170310-odjec1l.png" alt="" loading="lazy"></figure>
<p>‍</p>
<h2 id="推荐阅读">推荐阅读</h2>
<blockquote>
<p>Note：我看了很久还是没看懂。。得再看看</p>
</blockquote>
<ul>
<li>Estimating and interpreting FST: The impact of rare variants（Nick Patterson，2013年Review）</li>
<li><a href="assets/weirhill_annrevgenetFst_2002-20230510091806-ihbmsn4.pdf">weirhill_annrevgenetFst_2002.pdf</a></li>
<li>Estimating F-Statistics for the Analysis of Population Structure（1984年，Weir原文）</li>
</ul>
<h2 id="题外话">题外话</h2>
<p>用bedtools + R tidyverse来计算每个gene的FST忒慢了（这怎么“Have a nice day”），欢迎有缘人后台留言优秀方法！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「Population Genetics随笔」001｜coalescent theory]]></title>
        <id>https://chenyoupu.top/post/popgen_coalscent/</id>
        <link href="https://chenyoupu.top/post/popgen_coalscent/">
        </link>
        <updated>2023-04-24T13:26:04.000Z</updated>
        <content type="html"><![CDATA[<h1 id="写在前面">写在前面</h1>
<ul>
<li>虽然学习群体遗传学的过程中，肯定是需要看教材，更多地阅读书的，但是有的教材中要么就是缺公式，要是就是新手不友好，所以看别人帖子也是一种不为过的学习方式，但是也切记不能忽略了背后的数学描述生物的过程。</li>
<li>这篇文章是对G-CAT上coalescent theory的理解和总结，推荐阅读原博客。</li>
</ul>
<p>‍</p>
<h1 id="coalescence-定义">coalescence | 定义</h1>
<p>当一个个体或者一个群体中，发生mutation时，就产生了2个不同碱基类型的allele，这是一个前向（forward）的过程。</p>
<p>而coalescence，是一个逆向（backwards）的过程，即推断群体中两个allele，共享同一个ancestral allele的概率是多大。</p>
<p>‍</p>
<h1 id="coalescence-影响因素">coalescence | 影响因素</h1>
<p>将backwards合并理解为一个抽样过程，选定一个allele（A）的时候，即从ancestral population中（有效群体大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">N_{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）随机抽选一个allele作为ancestral allele的概率为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><msub><mi>N</mi><mi>e</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2N_{e}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2902079999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。那么再选中一个allele（B），其ancestral allele与A相同的概率还是为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><msub><mi>N</mi><mi>e</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2N_{e}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2902079999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p>
<p>而在current population中，有多少种AB allele组合呢？答案是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>n</mi><mo>!</mo></mrow><mrow><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo>)</mo><mo>!</mo><mn>2</mn><mo>!</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{n!}{(n-2)!2!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.400108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span><span class="mclose mtight">)</span><span class="mclose mtight">!</span><span class="mord mtight">2</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mclose mtight">!</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>种。</p>
<p>总而言之，针对一个allele，其coalescent rate和effective population size，针对一整个群体来说更是如此。</p>
<p>而在demographic history中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">N_{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并不是一成不变的，会受到环境的各种影响，而反映在群体上的则有population bottleneck、population expansion。</p>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230424214855-o21dt24.png" alt="image" title="coalescent rate, changing with Ne. Source from G-CAT" style="zoom:50%;" />
<p>而针对具有不同<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">N_{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的群体来说，更是如此，</p>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230424215039-8k3euv1.png" alt="image" title="不同Ne的群体，其coalescent的速率是不同的" style="zoom:50%;" />
<p>‍</p>
<h1 id="coalescence-how-to-apply-or-what-its-application">coalescence | how to apply or what its application?</h1>
<h2 id="1bottlenecks-testing">1）bottlenecks testing</h2>
<p>既然coalescent rate会随着有效群体大小的变化而变化，那其实也就说明了它可以反映生物学背后的故事，那么是什么故事呢？</p>
<p>当群体因为外界环境影响，有效群体大小变得特别小的时候，the number of alleles in total减少，群体水平的variants variation变小了，从图上看长这样，</p>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230424220239-1nvrq3n.png" alt="image" title="在回溯整个demographic history时，经过bottleneck之后，coalescent rate升高" style="zoom:50%;" />
<h2 id="2introgression-testing">2）introgression testing</h2>
<p>当两个population存在introgression或者horizontal gene transfer时，就会存在一些allele，它们backward collapse的时间，相较于population的spliting time是更早的，</p>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230424220623-pzvv9f7.png" alt="image" style="zoom:50%;" />
<p>‍</p>
<h2 id="3spliting-time-testing">3）spliting time testing</h2>
<p>一句话结束：population divergence或者说speciation发生的时候，coalescent events出现的次数也升高到了最高，</p>
<blockquote>
<p>但是有的coalescent可能发生在spliting之前，又可能发生在spliting之后，即基于coalescence估计出来的divergence time是approximation，只能是不断的逼近，一种永远无法抵达的真实。</p>
</blockquote>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230424220940-ojcsxmo.png" alt="image" style="zoom: 50%;" />
<p>‍</p>
<h1 id="推荐阅读">推荐阅读</h1>
<ul>
<li><a href="https://theg-cat.com/2018/11/09/bringing-alleles-back-together-applications-of-coalescent-theory/">theg-cat.com/2018/11/09/...</a></li>
</ul>
<p>‍</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「文献写作工作流」001｜Zotero - A Better Way to Organize Your Literature]]></title>
        <id>https://chenyoupu.top/post/wpaper001/</id>
        <link href="https://chenyoupu.top/post/wpaper001/">
        </link>
        <updated>2023-04-16T08:44:46.000Z</updated>
        <content type="html"><![CDATA[<h1 id="zotero-a-better-way-to-organize-your-literature-第1弹来了">Zotero | A Better Way to Organize Your Literature | 第1弹来了</h1>
<h1 id="写在前面">写在前面</h1>
<p>作为一个尚且还在搞科研的科研狗，当然还是得管理好自己的学习笔记。</p>
<p>作为早期体验过Mendeley的一批小众人，我觉得还是对文献的管理存在一定的要求。</p>
<ul>
<li>App要美观</li>
<li>文献组织要合理</li>
<li>笔记功能</li>
</ul>
<p>这里比较鸡肋的还是笔记功能，虽然市面上已经存在很多笔记软件，但是就算是好用的软件，还是得在两个App之间不断来回反复横跳，略嫌麻烦。因此有没有更好的解决方案呢？</p>
<p>‍</p>
<h1 id="better-notes-内嵌式的markdown笔记">better notes | 内嵌式的markdown笔记</h1>
<p>为了避免发生，一边看文献还得一边打开一个Word或者外置markdown软件（比如typora），能够自如地在Zotero内部进行笔记管理，better notes非常好的满足了我的需求，</p>
<ul>
<li>内嵌式的markdown类笔记软件，让我不需要再不同的笔记软件之前切换</li>
<li>提供了自定义模板等功能。让我能够更好地以“我”的方式去读文献，总结知识。</li>
</ul>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230415161027-ty4akfo.png" alt="image" title="我的自定义模板" style="zoom: 50%;" />
<p>另外两个点，</p>
<ul>
<li>就算想要用自己常用的笔记软件再来作为复盘，也是可以直接将better notes工作区内的内容之间复制到目标笔记软件中，即可以实现跳转到better notes笔记内，进而再跳转到对应的页面。</li>
<li>Quicker，则是一款轻量级的工具包，能够实现将Zotero中的文献选中，“复制”到笔记再实现跳转和双链笔记</li>
</ul>
<p>‍</p>
<h1 id="color-tags-最简单但却最实用">color tags | 最简单，但却最实用</h1>
<p>有很多各种华丽呼哨的笔记记录方式，仿佛color tags，已经被相忘于江湖。</p>
<p>但可别小瞧了最简单的方法，最简单的，往往却最实用。</p>
<p>我自己总结的color tags阅读文献的方式如下，</p>
<ul>
<li>绿色：Methods部分 / 文章中方法的细节部分</li>
<li>黄色：文章中所使用的统计量、计算方法</li>
<li>红色：Results部分 / 文章的重要结论</li>
<li>蓝色：文章中，不清晰的知识点</li>
<li>紫色：文章中引用的、后续可以继续阅读的参考文献</li>
<li>橙色：想要学的英语语法、词组</li>
</ul>
<p>而针对一篇文献，又可以很轻松地使用“插入笔记模板”的格式，直接插入到better notes当中，再做进一步的整理，</p>
<img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230416170625-mwrpa7d.png" alt="image" style="zoom:50%;" />
<h2 id="示例-color-tags导入到better-notes">示例 | color tags导入到better notes</h2>
<p><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230416170514-i7rkkpq.png" alt="image" style="zoom: 50%;" />​</p>
<p><img src="https://youpu777-assets-1308187048.cos.ap-shanghai.myqcloud.com/blog-img/image-20230416170504-fulcwsq.png" alt="image" style="zoom:50%;" />​</p>
<p>‍</p>
<h1 id="隐藏功能-zotero-dark-themes">隐藏功能 | Zotero Dark themes</h1>
<p>对于需要长时间坐在办公桌前的同学，Zotero原始配色就算不上什么有益眼睛健康的配色了，从而转向是否存在绿色、黑色皮肤的存在。</p>
<p>打开咕咕，直接搜索即可食用。</p>
<p>链接如下：<a href="https://github.com/Rosmaninho/Zotero-Dark-Theme">github.com/Rosmaninho/Zo...</a></p>
<p>‍</p>
<h1 id="我的资源">我的资源</h1>
<p>[1] https://github.com/Youpu-Chen/Zotero_configs</p>
<p>‍</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「基因组」001｜基因组组装之前要做的：Genome Survey]]></title>
        <id>https://chenyoupu.top/post/genomesurvey/</id>
        <link href="https://chenyoupu.top/post/genomesurvey/">
        </link>
        <updated>2022-10-16T07:36:39.000Z</updated>
        <content type="html"><![CDATA[<p>基因组组装之前，有一些问题还是需要注意的，</p>
<ul>
<li>genome size是多少？</li>
<li>评估得到的genome heterozygosity是多少？</li>
<li>重复序列的占比是多少？</li>
</ul>
<p>可以系统性地称为genome survey，这是一个非常简单的分析，但是其实有一些问题是值得注意的</p>
<p>Genome Survey一般基于Illumina short reads进行分析，因为二代测序便宜，先测出来试试水，</p>
<p>再判断三代的数据量，这应该算是一个非常经济实惠的做法。</p>
<h1 id="分析流程">分析流程</h1>
<p>1）fastp、Trimmomatic等软件挑一个过滤低质量序列</p>
<p>2）Jellyfish 2.3.0、KMC3</p>
<p>我个人其实比较喜欢KMC，因为可以直接读取<code>.gz</code>文件（绝对不是因为之前KMC作者帮助我愉快地解决了一个Bug），但是解决jellyfish脚本的过程中也让我对Shell Kernel有了一个更深刻的理解。</p>
<p>3）Genome Scope 2.0、GCE等软件，挑一个进行genome size、heterozygosity等指标的估计</p>
<p>我个人比较熟悉的还是Genome Scope 2.0，因为这个软件可以用于<a href="https://github.com/Youpu-Chen/Pipeline-for-Polyploid-Analysis">判断auto-tetraploid和allo-tetraploid</a>，</p>
<p>同时作者Michael C. Schatz的实验室还开发了FALCON~</p>
<h1 id="fastp">fastp</h1>
<pre><code class="language-shell">vim fastp.sh
sh fastp.sh 2&gt;fastp.err.log &amp;
</code></pre>
<p>Shell script:</p>
<pre><code class="language-shell">#!/bin/bash
# Preset
dir=&lt;specicy_path_of_your_rawdata&gt;
echo &quot;The raw dataset is placed at $dir&quot;
echo &quot;Now running Quality control&quot;
thread=24    # set 24 threads
quality=20   # set quality cutoff to 20 based on Phred33 
# 
fastp -w $thread -q $quality -i $dir/sample1.fq.gz -I $dir/sample2.fq.gz -o ./sample_clean_1.fq.gz -O ./sample_clean_2.fq.gz
</code></pre>
<h1 id="jellyfish-count-k-mer">Jellyfish: count k-mer</h1>
<pre><code class="language-shell">vim jellyfish.sh
chmod 777 jellyfish.sh  # key step, otherwise the script below will report syntax error
./jellyfish.sh 2&gt;jellyfish.err.log &amp;
</code></pre>
<p>“哼男人，嘴上说着喜欢KMC，但是却用Jellyfish”，</p>
<p>Shell script:</p>
<pre><code class="language-shell"># Preset
dir=&lt;specicy_path_of_your_cleandata&gt;
echo &quot;The clean dataset is placed at $dir&quot;
echo &quot;Now running Jellyfish Kmercount&quot;

# 17mer
echo &quot;Now running 17mer counting&quot;
content1=&quot;jellyfish count -C -m 17 -o ./sample.17mer.jf -s 10G -t 24 &lt;(pigz -dc $dir/sample_clean_1.fq.gz) &lt;(pigz -dc $dir/sample_clean_2.fq.gz)&quot;
echo &quot;The command is $content1&quot;

jellyfish count \
-C \
-m 17 \
&lt;( pigz -dc $dir/sample_clean_1.fq.gz ) &lt;( pigz -dc $dir/sample_clean_2.fq.gz ) \
-o ./sample.17mer.jf -s 10G -t 24


# 21mer: recommanded by author
echo &quot;Now running 21mer counting&quot;
content2=&quot;jellyfish count -C -m 21 -o ./sample.21mer.jf -s 10G -t 24 &lt;(pigz -dc $dir/sample_clean_1.fq.gz) &lt;(pigz -dc $dir/sample_clean_2.fq.gz)&quot;
echo &quot;The command is $content2&quot;

jellyfish count \
-C \
-m 21 \
&lt;( pigz -dc $dir/sample_clean_1.fq.gz ) &lt;( pigz -dc $dir/sample_clean_2.fq.gz ) \
-o ./sample.21mer.jf -s 10G -t 24
</code></pre>
<p>注意点：为什么要用<code>chmod 777</code>？<br>
答：未经777赋予可执行权限的脚本，仍为shell脚本，需要指定<code>bash</code>或者<code>sh</code>来运行程序，即不可从<code>jellyfish</code>直接开始运行程序，</p>
<p>就好比原本的运行方式为<code>bash &lt;script_name&gt;.sh</code>，现在要修改成为<code>./&lt;script_name&gt;.sh</code>的运行方式，不然就会出现syntax errror</p>
<h1 id="jellyfish-k-mer-spectrum-generation">Jellyfish: k-mer spectrum generation</h1>
<pre><code class="language-shell">jellyfish histo -t 24 -l 1 -h 500000 sample.17mer.jf &gt; sample.17mer.histo &amp;
jellyfish histo -t 24 -l 1 -h 500000 sample.21mer.jf &gt; sample.21mer.histo &amp;
</code></pre>
<p>注意点：<code>upper limitation</code>的修改。</p>
<p>Genome Scope 2.0的分析需要将k-mer spectrum的upper limit设置得高一些，不然后续genome size估计塌缩比例会特别大。</p>
<h1 id="genome-scope-20-smudeplot">Genome Scope 2.0 + Smudeplot</h1>
<p>1）The estimation of genome size, heterozygosity, etc.</p>
<pre><code class="language-shell">vim genomescope.sh
chmod 777 genomescope.sh
./genomescope.sh 2&gt;genomescope.err.log &amp;
</code></pre>
<p>Shell script:</p>
<pre><code class="language-shell">script=&lt;path_to_your_genomescope_repo&gt;/genomescope.R
dir=&lt;where_kmerspectrum_deposited&gt;
Rscript $script -i &lt;input_histo&gt; -o ./ -n &lt;outputname&gt; -p &lt;ploidy_level&gt; -k &lt;kmer_used&gt;
</code></pre>
<p>2）Kmer-pair plot</p>
<p>这部分官网其实给出了比较好的流程，我就只是简单概括走一下，</p>
<pre><code class="language-shell">dir=&lt;specify_your_kmercount_database&gt;
L=$(smudgeplot.py cutoff &lt;histo_from_kmc&gt; L)
U=$(smudgeplot.py cutoff &lt;histo_from_kmc&gt; U)
echo $L $U # these need to be sane values
# conda activate genomesurvey
kmc_tools transform $dir/&lt;kmc_db&gt; -ci&quot;$L&quot; -cx&quot;$U&quot; dump -s smudgeplot_kmc_db/&lt;kmc_db&gt;.kmc_L&quot;$L&quot;_U&quot;$U&quot;.dump
# conda activate smudgeplot
smudgeplot.py hetkmers -o smudgeplot_kmercounts/&lt;kmc_db&gt;.kmc_L&quot;$L&quot;_U&quot;$U&quot; &lt; smudgeplot_kmc_db/&lt;kmc_db&gt;.kmc_L&quot;$L&quot;_U&quot;$U&quot;.dump

# Plot
smudgeplot.py plot &lt;kmc_db&gt;._L&quot;$L&quot;_U&quot;$U&quot;_coverages.tsv
</code></pre>
<p>结果示意图如下，</p>
<figure data-type="image" tabindex="1"><img src="https://chenyoupu.top/post-images/1665905861119.png" alt="" loading="lazy"></figure>
<p><strong>基因组大小估计需要注意的点</strong>，</p>
<p>0）三代数据不适合用于Kmer分析，因为测序错误率高了很多，会对分析结果产生非常大的影响，</p>
<p>但是HiFi reads以及canu和falcon产生的corrected reads可以很好的适用于Genome Scope分析</p>
<p>1）<code>jellyfish histo</code>输出时指定的maximum kmer-freq，会极大地影响到genome size的估计，因此需要根据自己的数据进行调整，一般100000再往上也可</p>
<p>2）<code>genonomescope.R</code>的<code>-p</code>以及<code>--kcov</code>的设置，都会影响到genome size的估计</p>
<p>比如在genomescope2.0 model下，如果<strong>在输入数据和模型都已经定下来的基础上，将<code>--kcov</code>设置为原本的一倍，则genome size的大小估计会减半</strong>（此处感兴趣的，我建议还是自行搜索下基于kmer计算genome size的公式）</p>
<p>3）结果中的<code>transformed_linear_plot</code>和<code>linear_plot</code>有什么区别？</p>
<p>前者的<code>observed</code>曲线经过了一个转换，越往后的peak其峰值越大，即在原始的kmer freq上乘了一个n（n代表第n个peak），</p>
<p>后者的<code>observed</code>曲线为实际观测到的一个数值，没有经过上述转换</p>
<p>transformed linear：</p>
<figure data-type="image" tabindex="2"><img src="https://chenyoupu.top/post-images/1665905871689.png" alt="" loading="lazy"></figure>
<p>linear plot：</p>
<figure data-type="image" tabindex="3"><img src="https://chenyoupu.top/post-images/1665905877897.png" alt="" loading="lazy"></figure>
<p>4）Genome Scope 2.0分析时，如果将过多的kmer判定为了<code>error</code>，最终的genome size就会小了特别多（基于genome size的计算公式）</p>
<h1 id="背后的原理">背后的原理</h1>
<p>首先需要明确的一个点是：Genome Scope 是基于diploid进行编写的。</p>
<p>关于二倍体物种的基因组大小估计，如何理解。我想要举一个非常简单的例子来理解：</p>
<p>给个用kmer将genome给“划分”开的示意，</p>
<pre><code class="language-shell">				kmer:   ---A--
                		 --A---
                		  -A----
                		   A-----
				genome: ---A-----------------------------------------------
</code></pre>
<ul>
<li>
<p>假设当前的基因组非常纯合（-&gt; homozygous, not -&gt; heterozygous），kmer会在某一个频数上呈现一个峰值，</p>
</li>
<li>
<p>但是如果当前的基因组杂合度上升了，也就是我们一般在文献中看到的heterozygosity，kmer在另一个频数较小的区域，也会呈现一个峰值，也就是Genome Survey中提到的杂合峰</p>
<p>就比如下图中的T，是A对应的allele。该种情况的存在，会导致kmer出现另一种情况，从而降低了纯合峰的高度，比如下图的例子就表示了对应位置kmer的频数，从4降低到了2，</p>
<p>即可以将diploid的kmer topology理解为：aa，ab</p>
</li>
</ul>
<pre><code class="language-shell">				kmer:   ---A--
                		 --A---
				genome: ---A-----------------------------------------------
				           T
				        ---T--
				         --T---
</code></pre>
<p>所以，为了满足polyploid的产生，Genome Scope 2.0被开发 —— 基于负二项分布的Kmer模型，用于估计genome size、heterozygosity等。</p>
<p>三倍体的kmer topolygy：aaa（3种haplotype均一致），aab（有1种haplotype和另外2个haplotype存在区别），abc（3种haplotype各不相同）</p>
<p>四倍体的kmer topology：aaaa，aaab，aabb，abcd</p>
<h1 id="参考资料">参考资料</h1>
<p>[1] https://github.com/schatzlab/genomescope/issues/32</p>
<p>[2] https://github.com/schatzlab/genomescope/issues/43</p>
<p>[3] https://github.com/schatzlab/genomescope/issues/48</p>
<p>[4] https://github.com/schatzlab/genomescope</p>
<p>[5] https://github.com/KamilSJaron/smudgeplot</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「生物信息学中的Math」001｜浅谈统计检验效能和FDR]]></title>
        <id>https://chenyoupu.top/post/statistic-powerandfalse-positive/</id>
        <link href="https://chenyoupu.top/post/statistic-powerandfalse-positive/">
        </link>
        <updated>2022-10-10T01:27:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="什么是统计检验的效能power">什么是统计检验的效能（power）？</h3>
<p>我们首先来回顾一下，在假设检验中，我们需要什么。</p>
<p>（1）原假设（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）：可以认为是辩论赛中，保守一方的观点（e.g. 超级英雄和普通人没啥区别）<br>
（2）备择假设（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mi>A</mi></msub><mi mathvariant="normal">/</mi><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_{A}/H_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）：可以类比为辩论赛中，激进一方的观点（e.g. 超级英雄就是爷，就是比普通人牛）</p>
<p>在做计算的过程中，会涉及到一个非常重要的数值 —— <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>（一般取0.05 或 0.01）</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>的含义是：显著性水平、一类错误发生的概率（Type I Error）、弃真错误发生的概率。</p>
<blockquote>
<p>Note：α —— 一类错误、弃真错误、假阳性错误</p>
</blockquote>
<p>从这里有需要再引入几个概念，如下表：</p>
<table>
<thead>
<tr>
<th></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是正确的</th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是错误的</th>
</tr>
</thead>
<tbody>
<tr>
<td>接受<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td>接受<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">1-α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>）</td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">β</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>错误</td>
</tr>
<tr>
<td>拒绝<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">H_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>错误</td>
<td>接受<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">H_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">1-β</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>）</td>
</tr>
</tbody>
</table>
<p>β从α衍生出来，是二类错误发生的概率（Type II Error）、取伪错误发生的概率。</p>
<p>在假设检验过程中，我们把<u>拒绝原假设后，接受正确的备择假设的概率称为统计检验的效能/功效（statistical power）</u>，因此其在数值上等于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">1-β</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>。<br>
【个人理解】<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">1-β</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>，实际上就是确定两个样本的总体有差异之后，假设检验能够顺利根据样本推断出真实的总体信息的概率。</p>
<h3 id="什么是假阳性false-positive-rate">什么是假阳性（false positive rate）？</h3>
<p>结合时事，我就拿新冠检测作为例子。</p>
<p>假设对100个人进行核酸检测，检测结果分别如下：</p>
<table>
<thead>
<tr>
<th></th>
<th>被测对象真实情况：阳性</th>
<th>被测对象真实情况：阴性</th>
</tr>
</thead>
<tbody>
<tr>
<td>新冠检测结果：阳性</td>
<td>5</td>
<td>2</td>
</tr>
<tr>
<td>新冠检测结果：阴性</td>
<td>3</td>
<td>90</td>
</tr>
</tbody>
</table>
<p>可以得到2个指标的计算结果，如下：<br>
（1）true positve rate（sensitivity，即灵敏度）：检测出的<strong>真实</strong>阳性样本数 除以 所有真实阳性样本数<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>5</mn><mrow><mn>5</mn><mo>+</mo><mn>3</mn></mrow></mfrac><mo>=</mo><mn>0.625</mn></mrow><annotation encoding="application/x-tex">
\frac{5}{5+3} = 0.625
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">2</span><span class="mord">5</span></span></span></span><br>
（2）false positive rate：检测出的<strong>假</strong>阳性样本数 除以 所有真实阴性样本数<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>2</mn><mrow><mn>2</mn><mo>+</mo><mn>90</mn></mrow></mfrac><mo>=</mo><mn>0.0217</mn></mrow><annotation encoding="application/x-tex">
\frac{2}{2+90} = 0.0217
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">+</span><span class="mord mtight">9</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord">7</span></span></span></span><br>
还有一个非常重要的计算指标，是特异度（specificity），计算公式如下：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>90</mn><mrow><mn>90</mn><mo>+</mo><mn>2</mn></mrow></mfrac><mo>=</mo><mn>0.9783</mn></mrow><annotation encoding="application/x-tex">
\frac{90}{90+2}= 0.9783
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">7</span><span class="mord">8</span><span class="mord">3</span></span></span></span><br>
一张找来的总结表：</p>
<figure data-type="image" tabindex="1"><img src="https://chenyoupu.top/post-images/1665365482571.jpg" alt="" loading="lazy"></figure>
<h3 id="参考资料">参考资料</h3>
<p>[1] https://www.jianshu.com/p/d5ea74ca61f8<br>
[2] https://blog.csdn.net/fish2009122/article/details/110040002<br>
[3] 统计功效, 百度百科<br>
[4] 真阳性率, 百度百度<br>
[5] 假阳性率, 百度百科<br>
[6] https://zhwhong.cn/2017/04/14/ROC-AUC-Precision-Recall-analysis/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「一文搞定序列比对算法」Global以及Local Alignment序列比对算法的实现]]></title>
        <id>https://chenyoupu.top/post/globalandlocal_alignment/</id>
        <link href="https://chenyoupu.top/post/globalandlocal_alignment/">
        </link>
        <updated>2022-10-08T06:15:10.000Z</updated>
        <content type="html"><![CDATA[<p>序列比对是什么以及序列比对主要的作用是什么，本篇博客就一笔带过，因为不是主要分享内容。</p>
<p>序列比对，此处引申为pairwise alignment会更加恰当一些，用于比较2条序列之间的相似程度，推断它们之间的相似程度，进而探索对应功能以及系统发育关系。</p>
<p>接下来大体分为2个部分，1）全局比对，2）局部比对</p>
<p>首先要明确一个概念：<strong>序列比对想要达到的目的是什么？</strong></p>
<p>引一张图来说明序列比对的目的以及全局比对、局部比对之间的区别，</p>
<p>总的来说，也就是全局比对和局部比对想要达到的目的是不一样的，</p>
<ul>
<li>全局比对想要得到的是2条序列最佳的匹配结果（e.g. 最多的match数量、最高的比对得分、最高的identity），局部比对想要得到的是2条序列中<strong>最佳匹配片段</strong>（注意：最佳的匹配结果需要建立在相对较少的序列修改上）</li>
<li>全局比对更适用于evolution关系上更加靠近的（e.g. 粳稻和籼稻），而局部比对更加适用于evolution关系上关系比较远的（e.g. 水稻和葡萄）</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://chenyoupu.top/post-images/1665210943785.png" alt="" loading="lazy"></figure>
<h1 id="步骤拆解global-alignment">「步骤拆解」Global Alignment</h1>
<p>利用动态规划来解决问题，最关键的一步就是列出<strong>动态规划公式</strong>，只要能列出公式，后面的编程也都只是时间问题。</p>
<p>但是，我并不想一上来就列出数学公式，我认为以一个简单的例子入手更有利于序列比对问题中的动态规划应用。</p>
<p>接下来，先理一理基于动态规划的序列比对的过程。</p>
<h2 id="1intialization-matrix-filling">（1）Intialization + Matrix Filling</h2>
<p>假设现在有2条长度分别为n、m的序列，</p>
<p>那则需要构建行数为n+1，列数为m+1的矩阵，</p>
<p>而“Filling”这个过程，即将第一列和第一行进行填充，从数学公式的角度来理解的话，</p>
<ul>
<li>第一列的填充：$$g*length(matrix[1:i, 1])$$，i~[1, n]</li>
<li>第一行的填充：$$g*length(matrix[1, 1:j])$$，j~[1, m]</li>
</ul>
<h2 id="2tracing-back">（2）Tracing Back</h2>
<p>每一个单元的填充模式如下，</p>
<ul>
<li>
<p>横向和竖向的移动代表了gap open（horizontal，vertical）</p>
<p>但更加复杂的情况应该考虑到gap在哪一条序列打开</p>
</li>
<li>
<p>对角线的移动则可以分为1）<strong>match</strong>（从大的数值回溯到小的数值），2）<strong>mismatch</strong>（从小的数值回溯到大的数值）</p>
</li>
</ul>
<p>Note：数值增大代表替换矩阵中，该碱基对应关系为match，而数值减小，代表替换矩阵中碱基对应关系为mismatch</p>
<figure data-type="image" tabindex="2"><img src="https://chenyoupu.top/post-images/1665210984762.png" alt="" loading="lazy"></figure>
<h1 id="公式global-alignment">「公式」Global Alignment</h1>
<figure data-type="image" tabindex="3"><img src="https://chenyoupu.top/post-images/1665211129642.png" alt="" loading="lazy"></figure>
<h1 id="引入gap-extension">引入gap extension</h1>
<p><strong>出现4个单位长度的一个完整gap将两条序列给比对上，或者4个单位长度的单独gap将两条序列给比对上是更符合生物学原理的</strong>？</p>
<p>上述的文字情况如下所示，</p>
<pre><code class="language-shell"># 1.
ATCGATCGATCGATCG----
AGCTAGCTCAGTACGT----
# 2.
ATCG-ATCG-ATCG-ATCG-ATCG
ATCG-ATCG-ATCG-ATCG-ATCG
</code></pre>
<p><a href="http://www.cs.otago.ac.nz/cosc348/alignments/Lecture05_GlobalAlignment.pdf">答案是前者</a>。这就需要在序列比对中引入另一个非常重要的细节 —— affine gap penalty。</p>
<blockquote>
<p>Note：此处引入的affine gap penalty为“not penalize open with extension”，即在打开一个gap的时候，不会在该gap上同时引入open和extension的罚分</p>
</blockquote>
<p>affine gap penalty，即在打开第一个gap的时候引入gap open罚分，而在该gap的基础上进行延续则采用gap extension罚分。</p>
<p>该种做法与原来的常量gap有一定区别，因此就需要改变动态规划公式，同时引入CS中的状态机可以帮助我们更好地理解这个问题。</p>
<figure data-type="image" tabindex="4"><img src="https://chenyoupu.top/post-images/1665211055133.png" alt="" loading="lazy"></figure>
<p>上图中存在3个状态，</p>
<p>1）M：当前的比对情况下为match或mismatch</p>
<p>2）Ix：当前的比对情况为在seq2上打开一个gap，而seq1上为一个base</p>
<p>3）Iy：当前的比对情况为在seq1上打开一个gap，而seq2上为一个base</p>
<p>三者之间是可以相互转换的，通过d、e、s(x, y)来调整。</p>
<p>因此动态规划公式变为如下的形式，</p>
<figure data-type="image" tabindex="5"><img src="https://chenyoupu.top/post-images/1665211100756.png" alt="" loading="lazy"></figure>
<h2 id="gap-extension情况下的动态规划矩阵初始化">gap extension情况下的动态规划矩阵初始化</h2>
<ul>
<li>M(0,0)=0</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>x</mi></msub><mo>(</mo><mi>i</mi><mo separator="true">,</mo><mn>0</mn><mo>)</mo><mo>=</mo><mi>d</mi><mo>+</mo><mi>e</mi><mo>∗</mo><mo>(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">I_{x}(i,0)=d + e*(i-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>y</mi></msub><mo>(</mo><mi>j</mi><mo separator="true">,</mo><mn>0</mn><mo>)</mo><mo>=</mo><mi>d</mi><mo>+</mo><mi>e</mi><mo>∗</mo><mo>(</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">I_{y}(j,0)=d+e*(j-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ul>
<p>但由于$$I_{x}$$在第一行以及$$I_{y}$$在第一列的取值都是不存在的，因此定义为-inf。</p>
<p>同时，由于每一个cell都存在一种情况，我们需要建立3个矩阵来存储对应的信息，分别用M、X、Y来表示。</p>
<p>经初始化之后，就可以得到如下3个矩阵：</p>
<h4 id="1m">1）M</h4>
<figure data-type="image" tabindex="6"><img src="https://chenyoupu.top/post-images/1665211211305.png" alt="" loading="lazy"></figure>
<h4 id="2x">2）X</h4>
<p>代表在列方向打开一个gap，即seq2上插入一个gap</p>
<figure data-type="image" tabindex="7"><img src="https://chenyoupu.top/post-images/1665211230263.png" alt="" loading="lazy"></figure>
<h4 id="3y">3）Y</h4>
<p>代表在行方向上打开一个gap，即seq1上插入一个gap</p>
<figure data-type="image" tabindex="8"><img src="https://chenyoupu.top/post-images/1665211245230.png" alt="" loading="lazy"></figure>
<h3 id="gap-extension情况下的动态规划矩阵回溯">gap extension情况下的动态规划矩阵回溯</h3>
<p>3个矩阵，可以使用1个矩阵来记录当前的cell的数值来源，3种情况如下</p>
<ul>
<li>来自M，即当前为一个match/mismatch，记录为0</li>
<li>来自X，即当前为一个gap open/gap extension，记录为1</li>
<li>来自Y，即当前为一个gap open/gap extension，记录为2</li>
</ul>
<p>给个示例的回溯矩阵，</p>
<figure data-type="image" tabindex="9"><img src="https://chenyoupu.top/post-images/1665211266426.png" alt="" loading="lazy"></figure>
<h1 id="步骤拆解local-alignment">「步骤拆解」Local Alignment</h1>
<p>步骤与Global Alignment近似，只是引入了一个0，就可以得到局部的最佳匹配。</p>
<p>公式如下，</p>
<figure data-type="image" tabindex="10"><img src="https://chenyoupu.top/post-images/1665211285196.png" alt="" loading="lazy"></figure>
<h1 id="代码实现">代码实现</h1>
<pre><code class="language-python">import numpy as np

# Preset variables
seq1 = &quot;TCGTAGACGA&quot;
seq2 = &quot;ATAGAATGCGG&quot;
print(f'The seq1 has length of {len(seq1)}')
print(f'The seq2 has length of {len(seq2)}')

match = 1
mismatch = -1
gap_open = -2
gap_extension = -1
# 
global MIN
MIN = -float(&quot;inf&quot;)


def identity_match(base1, base2):
    '''Note: this function is used to compare the bases and return match point or mismatch point'''
    if base1 == base2:
        return match
    else:
        return mismatch

def createscorematrix(n, m):
    '''Note: this function is used to generate the original score function'''
    # Create match matrix, x matrix and y matrix
    m_mat = [np.zeros(m+1) for i in range(0, n+1)]
    x_mat = [np.zeros(m+1) for i in range(0, n+1)]
    y_mat = [np.zeros(m+1) for i in range(0, n+1)]

    return m_mat, x_mat, y_mat

m_mat, x_mat, y_mat = createscorematrix(len(seq1), len(seq2))
# print(m_mat)
# print(x_mat)
# print(y_mat)


def scorematrix_init(m_mat, x_mat, y_mat, d, e, local=False):
    '''Note: this function conduct the score matrix initialization'''
    '''Global Alignment'''
    if local == False:
        '''match matrix filling'''
        for i in range(0, len(m_mat)):
            for j in range(0, len(m_mat[0])):
                if i == 0 and j == 0:
                    m_mat[i][j] = 0
                elif i == 0 and j &gt; 0:
                    m_mat[i][j] = MIN
                elif i &gt; 0 and j == 0:
                    m_mat[i][j] = MIN
        # print(m_mat)
        for line in m_mat:
            r_list = [str(i) for i in line]
            print(' '.join(r_list))

        '''x_matrix filling'''
        for i in range(0, len(x_mat)):
            for j in range(0, len(x_mat[0])):
                if i == 0 and j == 0:
                    x_mat[i][j]=0
                if i &gt; 0 and j == 0:
                    x_mat[i][j] = d+e*(i-1)
        x_first_row = [0]
        x_first_row.extend([MIN]*(len(x_mat[0])-1))
        x_mat[0] = x_first_row
        # print(x_mat)
        for line in x_mat:
            r_list = [str(i) for i in line]
            print(' '.join(r_list))

        '''y_matrix filling'''
        for i in range(0, len(y_mat)):
            for j in range(0, len(y_mat[0])):
                if i == 0 and j == 0:
                    y_mat[i][j]=0
                elif i &gt; 0 and j == 0: 
                    y_mat[i][j] = MIN
        y_first_row = [0]
        y_first_row.extend([d+e*(i-1) for i in range(1, len(y_mat[0]-1))])
        y_mat[0] = y_first_row
        # print(y_mat)
        for line in y_mat:
            r_list = [str(i) for i in line]
            print(' '.join(r_list))

        return m_mat, x_mat, y_mat
    
    '''Local Alignment: Initialization step for Smith-Watermen is useless'''
    if local == True:
        return m_mat, x_mat, y_mat

m_mat, x_mat, y_mat = scorematrix_init(m_mat, x_mat, y_mat, -2, -1, local=False)
# m_mat, x_mat, y_mat = scorematrix_init(m_mat, x_mat, y_mat, -2, -1, local=True)


def matrix_filling(m_mat, x_mat, y_mat, d, e, local=False):
    '''this function is used to create the scoring matrix using three dynamic programming,
    and building a tracing matrix to restore the paths for the retrieve of aliignments'''
    '''Global Alignment Activation'''
    if local == False:
        # Filling score matrix and record the trace
        trace_matrix = [np.zeros(len(m_mat[0])) for i in range(0, len(m_mat))]

        for i in range(1, len(m_mat)):
            # print(m_mat[0])
            for j in range(1, len(m_mat[0])):
                # print(i, j)
                m_mat[i][j] = max(
                    m_mat[i-1][j-1] + identity_match(seq1[i-1], seq2[j-1]),
                    x_mat[i-1][j-1] + identity_match(seq1[i-1], seq2[j-1]),
                    y_mat[i-1][j-1] + identity_match(seq1[i-1], seq2[j-1])
                )
                x_mat[i][j] = max(m_mat[i-1][j] + d, x_mat[i-1][j] + e)
                y_mat[i][j] = max(m_mat[i][j-1] + d, y_mat[i][j-1] + e)
        # for line in m_mat:
        #     print(line)

        # Take the greatest values in these three matrix,
        # merge into one matrix,
        # and record the path
        new_mat = [np.zeros(len(m_mat[0])) for i in range(0, len(m_mat))]
        for i in range(0, len(m_mat)):
            for j in range(0, len(m_mat[0])):
                new_mat[i][j] = max(m_mat[i][j], x_mat[i][j], y_mat[i][j])
                # Fill the trace matrix
                # Note: from match/mismatch is 0, from x_mat (open a gap in seq2) is 1, from y_mat (open a gap in seq1)
                if m_mat[i][j] == max(m_mat[i][j], x_mat[i][j], y_mat[i][j]):
                    trace_matrix[i][j] = 0
                elif x_mat[i][j] == max(m_mat[i][j], x_mat[i][j], y_mat[i][j]):
                    trace_matrix[i][j] = 1
                elif y_mat[i][j] == max(m_mat[i][j], x_mat[i][j], y_mat[i][j]):
                    trace_matrix[i][j] = 2
        # # Print out the scoring matrix
        # for line in new_mat:
        #     r_list = [str(i) for i in line]
        #     print('\t'.join(r_list))
        # # Print out the tracing matrix
        for line in trace_matrix:
            r_list = [str(i) for i in line]
            print('\t'.join(r_list))

        return new_mat, trace_matrix
    
    '''Local Alignment Activation'''
    if local == True:
        # Filling score matrix and record the trace
        trace_matrix = [np.zeros(len(m_mat[0])) for i in range(0, len(m_mat))]

        for i in range(1, len(m_mat)):
            # print(m_mat[0])
            for j in range(1, len(m_mat[0])):
                # print(i, j)
                m_mat[i][j] = max(
                    m_mat[i-1][j-1] + identity_match(seq1[i-1], seq2[j-1]),
                    x_mat[i-1][j-1] + identity_match(seq1[i-1], seq2[j-1]),
                    y_mat[i-1][j-1] + identity_match(seq1[i-1], seq2[j-1]),
                    0
                )
                x_mat[i][j] = max(m_mat[i-1][j] + d, x_mat[i-1][j] + e)
                y_mat[i][j] = max(m_mat[i][j-1] + d, y_mat[i][j-1] + e)
        # for line in m_mat:
        #     print(line)

        # Take the Greatest values in these three matrix
        new_mat = [np.zeros(len(m_mat[0])) for i in range(0, len(m_mat))]
        for i in range(0, len(m_mat)):
            for j in range(0, len(m_mat[0])):
                new_mat[i][j] = max(m_mat[i][j], x_mat[i][j], y_mat[i][j])
                if m_mat[i][j] == max(m_mat[i][j], x_mat[i][j], y_mat[i][j]):
                    trace_matrix[i][j] = 0
                elif x_mat[i][j] == max(m_mat[i][j], x_mat[i][j], y_mat[i][j]):
                    trace_matrix[i][j] = 1
                elif y_mat[i][j] == max(m_mat[i][j], x_mat[i][j], y_mat[i][j]):
                    trace_matrix[i][j] = 2
        
        # # Print out the scoring matrix
        # for line in new_mat:
        #     r_list = [str(i) for i in line]
        #     print(' '.join(r_list))
        # # Print out the tracing matrix
        # for line in trace_matrix:
        #     r_list = [str(i) for i in line]
        #     print('\t'.join(r_list))
        return new_mat, trace_matrix

score_matrix, trace_matrix = matrix_filling(m_mat, x_mat, y_mat, -2, -1, local=False)
# score_matrix, trace_matrix = matrix_filling(m_mat, x_mat, y_mat, -2, -1, local=True)

# seq1 = &quot;-TCGTAGACGA&quot;
# seq2 = &quot;ATAGAATGCGG&quot;
def global_backtracking(matrix, score_matrix):
    '''this function is used to trace back the input matrix and output the final alignment
    Note: the input matrix is trace matrix'''
    ti = len(seq1)
    tj = len(seq2)
    alignment1 = ''
    alignment2 = ''
    while (ti &gt; 0 or tj &gt; 0):
        # Choose to go left, up or diagonal
        cell = matrix[ti][tj]
        if cell == 0:
            alignment1 = seq1[ti-1] + alignment1
            alignment2 = seq2[tj-1] + alignment2
            ti -= 1
            tj -= 1
        elif cell == 1:
            alignment1 = seq1[ti-1] + alignment1
            alignment2 = '-' + alignment2
            ti -= 1
        elif cell == 2:
            alignment1 = '-' + alignment1
            alignment2 = seq2[tj-1] + alignment2
            tj -= 1

    # fmt_alignment = f'{alignment1}\n{alignment2}'
    # print(fmt_alignment)
    # Formt the info
    info = f&quot;======The Global======\n     {alignment1}\n     {alignment2}\nSCORE: {score_matrix[len(score_matrix)-1][len(score_matrix[0])-1]}&quot;
    print(info)
global_backtracking(trace_matrix, score_matrix)


def local_backtracking(trace_matrix, score_matrix):
    '''this function does backtracking like FUNCTION global_backtracking, but in the way of local aligment'''
    # Convert score matrix into Numpy array to find maximum value
    new_score_matrix = np.array(score_matrix)
    pos = np.unravel_index(np.argmax(new_score_matrix, axis=None), new_score_matrix.shape)  # retrieve the maximum value
    ti = pos[0]
    tj = pos[1]
    # print(f'{ti}\t{tj}')
    alignment1 = ''
    alignment2 = ''

    while (ti &gt; 0 or tj &gt; 0):

        if new_score_matrix[ti][tj] == 0: # stop local alignment back tracking when 0 values met
            break
        
        cell = trace_matrix[ti][tj]
        if cell == 0:
            alignment1 = seq1[ti-1] + alignment1
            alignment2 = seq2[tj-1] + alignment2
            ti -= 1
            tj -= 1
        elif cell == 1:
            alignment1 = seq1[ti-1] + alignment1
            alignment2 = '-' + alignment2
            ti -= 1
        elif cell == 2:
            alignment1 = '-' + alignment1
            alignment2 = seq2[tj-1] + alignment2
            tj -= 1
    info = f&quot;======The Local======\n     {alignment1}\n     {alignment2}\nSCORE: {np.ndarray.max(new_score_matrix)}&quot;
    print(info)

# local_backtracking(trace_matrix, score_matrix)
</code></pre>
<h1 id="参考文献">参考文献</h1>
<p>[1] 《组学数据中的统计与分析》，田卫东</p>
<p>[2] https://users.soe.ucsc.edu/~karplus/bme205/f12/Alignment.html</p>
<p>[3] https://www.youtube.com/watch?v=ZBD9he4Zp1E</p>
<p>[4] Biological sequence analysis: Probabilistic models of proteins and nucleic acids</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「R语言刷题」数据类型篇 - 从tidyr和dplyr入手]]></title>
        <id>https://chenyoupu.top/post/R-exercises-1/</id>
        <link href="https://chenyoupu.top/post/R-exercises-1/">
        </link>
        <updated>2022-09-22T13:54:16.000Z</updated>
        <content type="html"><![CDATA[<p>R语言到底可以用来做什么？</p>
<p>在生物信息学领域，大数据、机器学习等方向，和Python一比，我感觉已经相形见绌，</p>
<p>所以为什么还要学习R语言？</p>
<p>1）ggplot2的绘图体系非常完美</p>
<p>2）R base能够完成我日常小数据的分析</p>
<p>有很多人说，<code>tidyverse</code>给了R二次生命，但是在我看来它的编程思维，稍显奇怪，不太能够适应，</p>
<p>但是我属于一个钻牛角尖的人，既然学了，而且R我也没有完全丢掉，也是有一定必要学习一些重获新生的R语言。</p>
<p>因此这篇文章就是针对我在最近的R语言刷题中的总结。</p>
<h1 id="数据读入-写出">数据读入 / 写出</h1>
<h2 id="从r-base的角度看问题">从R base的角度看问题</h2>
<pre><code class="language-R">read.table()
read.csv()
write.table()
write.csv()
</code></pre>
<h2 id="从readr的角度看问题">从<code>readr</code>的角度看问题</h2>
<pre><code class="language-R">read_csv()
read_delim()
read_table()
write_delim(df, 'filename.csv')
write_csv(df, 'filename.csv')
write_excel_csv(df, 'filename.csv')
write_tsv(df, 'filename.csv')
</code></pre>
<h1 id="dataframe"><code>data.frame</code></h1>
<h2 id="从r-base的角度看问题-2">从R base的角度看问题</h2>
<p>如何随心所欲的操作<code>data.frame</code>？</p>
<p>使用<code>data.frame()</code>创建数据库，</p>
<p>1）给定<code>colname</code>，再给定该变量对应的element（一般是vector格式），即</p>
<center>colname=c(elements)</center>
<p>2）依此类推，增添每一列</p>
<pre><code class="language-R"># 1. 数据框的创建
df &lt;- data.frame(
  &quot;grammer&quot; = c(&quot;Python&quot;,&quot;C&quot;,&quot;Java&quot;,&quot;GO&quot;,NA,&quot;SQL&quot;,&quot;PHP&quot;,&quot;Python&quot;),
  &quot;score&quot; = c(1,2,NA,4,5,6,7,10)
)
</code></pre>
<h2 id="从tidyr的角度看问题">从<code>tidyr</code>的角度看问题</h2>
<pre><code class="language-R">library(tidyr)
df &lt;- tibble(
  &quot;grammer&quot; = c(&quot;Python&quot;,&quot;C&quot;,&quot;Java&quot;,&quot;GO&quot;,NA,&quot;SQL&quot;,&quot;PHP&quot;,&quot;Python&quot;),
  &quot;score&quot; = c(1,2,NA,4,5,6,7,10)
)
# # A tibble: 8 x 2
#   grammer score
#   &lt;chr&gt;   &lt;dbl&gt;
# 1 Python      1
# 2 C           2
# 3 Java       NA
# 4 GO          4
# 5 NA          5
# 6 SQL         6
# 7 PHP         7
# 8 Python     10
</code></pre>
<h2 id="dplyr的衔接"><code>dplyr</code>的衔接</h2>
<p><code>dplyr</code>提供了一系列用C++重新编写过的函数，能够加快我们处理数据的速度。</p>
<p>主要包含的函数如下，</p>
<pre><code class="language-R">select()
filter()
mutate()
group_by()
arrange()
</code></pre>
<h3 id="1数据框列名的重新命名names-colnames-rename">1）数据框列名的重新命名：<code>names()</code>, <code>colnames()</code>, <code>rename()</code></h3>
<p>R base对列名进行修改的话，使用如下格式，</p>
<pre><code class="language-R"># R base
names(df)[2] &lt;- c('popularity')

# dplyr
df &lt;- df %&gt;% rename(popularity = score)
</code></pre>
<h3 id="2数据过滤which-filter">2）数据过滤：<code>which()</code>, <code>filter()</code></h3>
<pre><code class="language-R"># R base
df[which(df$popularity &gt; 3), ]

# dplyr
df %&gt;%
  filter(popularity &gt; 3)

# 按照范围也是一样的，
df %&gt;%
  filter(popularity &gt; 3 &amp; popularity &lt;7)
</code></pre>
<h3 id="3选择某一列数据-select">3）选择某一列数据：<code>$</code>, <code>select()</code></h3>
<pre><code class="language-R"># R base
df$popularity

# dplyr
df &lt;- df %&gt;%
    select(popularity, everything())
</code></pre>
<blockquote>
<p>Note：<code>tidyverse::everything()</code>的作用，为选择数据框中的所有变量。</p>
<p>与<code>select()</code>函数一起使用，可以改变数据框中变量的排列顺序（e.g. 将变量A从变量B后移动到变量B前），以iris数据集为例，</p>
<pre><code class="language-R">select(iris, everything())
#  A tibble: 150 x 5
#    Sepal.Length Sepal.Width Petal.Length Petal.Width Species
#           &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  
#  1          5.1         3.5          1.4         0.2 setosa
select(iris, Species, everything())
# # A tibble: 150 x 5
#    Species Sepal.Length Sepal.Width Petal.Length Petal.Width
#    &lt;fct&gt;          &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;       &lt;dbl&gt;
#  1 setosa           5.1         3.5          1.4         0.2
</code></pre>
<p>可以看到<code>Species</code>被提前了。</p>
</blockquote>
<h3 id="4将一行多行数据添加到数据框中rbind">4）将一行/多行数据添加到数据框中：<code>rbind()</code></h3>
<pre><code class="language-R">row &lt;- data.frame(
  &quot;grammer&quot; = c(&quot;Perl&quot;),
  &quot;popularity&quot; = c(6.6)
)
df &lt;- rbind(df, row)
</code></pre>
<h3 id="5分组aggregate-group_by">5）分组：<code>aggregate()</code>, <code>group_by</code></h3>
<ul>
<li>R base：<code>aggregate()</code></li>
<li>dplyr：<code>group_by</code> + <code>summarise</code></li>
</ul>
<pre><code class="language-R"># R base
# 使用aggregate对df进行分组计算
library(flipAPI)
data = DownloadXLSX(&quot;https://wiki.q-researchsoftware.com/images/1/1b/Aggregation_data.xlsx&quot;, want.row.names = FALSE, want.data.frame = TRUE)
data.agg = aggregate(df,
                by = list(data$Role),
                FUN = mean)

# dplyr
# 使用group_by()分组，并进行相关计算
library(readr)
df &lt;- read_csv('pandas120.csv')
df %&gt;%
  group_by(education) %&gt;%    # 设置用于分组的变量，此处为education
  summarise(mean = mean(salary))
</code></pre>
<h3 id="6构建新的一列变量mutate">6）构建新的一列变量：<code>mutate()</code></h3>
<pre><code class="language-R"># R base
# 使用cbind()函数

# dplyr
df &lt;- df %&gt;%
  mutate(test = paste0(df$education, df$createTime))
</code></pre>
<blockquote>
<p>Note：<code>paste0</code>，先将变量转换为字符类型</p>
</blockquote>
<h3 id="7将某一列的设置为索引rownames-column_to_rownames">7）将某一列的设置为索引：<code>rownames()</code>, <code>column_to_rownames()</code></h3>
<pre><code class="language-R"># R base
rownames(df) &lt;- df$createTime

# dplyr
# 使用column_to_rownames，该函数将某一列设置为行名后得到
df %&gt;%
  tibble::column_to_rownames('createTime')
</code></pre>
<h3 id="8数据排序">8）数据排序</h3>
<pre><code class="language-R"># R base
# sort(): 返回的是排序后的结果
# order()
df &lt;- df[order(df$popularity), ]

# dplyr
# 使用arrange()
df &lt;- df %&gt;%
  arrange(popularity)
df &lt;- df %&gt;%
  arrange(desc(popularity))
</code></pre>
<h3 id="9数据的总结summary-summarize">9）数据的总结：<code>summary()</code>, <code>summarize()</code></h3>
<p>略</p>
<h2 id="与dataframe有关的实例">与<code>data.frame</code>有关的实例</h2>
<h3 id="1填补na">1）填补NA</h3>
<p>1）使用R包<code>Hmisc</code>中的<code>impute()</code>函数<br>
2）<u>使用impute函数的一般模式</u>，一为输入的向量，二为如何填充NA值所定义的<font color='yellow'>FUN</font></p>
<blockquote>
<p>Note：下列代码中的<code>unlist</code>，只是为了安全作用</p>
</blockquote>
<pre><code class="language-R">library(Hmisc)
index &lt;- which(is.na(df$popularity))
df$popularity &lt;- impute(df$popularity,
                       (unlist(df[index-1, 2] +
                               df[index+1, 2]))/2)
</code></pre>
<h3 id="2将宽数据转换为长数据">2）将宽数据转换为长数据</h3>
<p>使用<code>tidyr</code>中的<code>pivot_longer()</code>函数，</p>
<p>一般的使用模式如下，</p>
<pre><code class="language-R">pivot_longer(data, 
             cols, names_to = &quot;name&quot;,  # cols，定义一个vector用于选择df中的列并进行合并
             values_to = &quot;value&quot;,      # 每一行对应的元素
             values_drop_na = FALSE)
</code></pre>
<p>举个例子，</p>
<pre><code class="language-R">library(tidyr)
df %&gt;%
  select(日期,`开盘价(元)`,`收盘价(元)`) %&gt;%
  pivot_longer(c(`开盘价(元)`,`收盘价(元)`),
               names_to='type',values_to='price') %&gt;%
  ggplot(aes(日期,price,color=type)) +
  geom_line(size=1.2) +
  scale_color_manual(values=c('steelblue','orange')) +
  theme_bw() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    legend.position = c(0.86, 0.9)
 )
</code></pre>
<h3 id="3读入数据的测试">3）读入数据的测试</h3>
<p>假设现在有一个非常大的数据集，但是可以用<code>read.csv</code>等函数进行读入，然后后续用到的数据实际上只占了df的2列，</p>
<p>1）如何找到这两列？</p>
<p>2）如何在后续的分析中只读取到这两列？</p>
<pre><code class="language-R">res &lt;- read.csv('数据1.csv',encoding = 'GBK',nrows = 3)  # 测试读入3行数据

# 获取每一列的数据类型（e.g. integer、character）
classes &lt;- sapply(res, class)
classes[-match(c('positionName','salary'), names(classes))] &lt;- 
	rep('NULL', length(classes) - 2)  # 保留只想要选择的列

df &lt;- read.csv('数据1.csv', encoding = 'GBK', nrows = 10,
               colClasses = classes) # 使用&quot;colClasses=&quot;指定列
</code></pre>
<p>代码的解读，</p>
<p>1）测试读入数据，即读取3行<br>
2）使用<code>sapply</code>获取每一列的数据类型<br>
3）去除不想要的列的数值类型，即 <code>-&gt;None</code><br>
4）重新使用<code>read.csv(, colClasses=)</code>，对目的数据进行读取</p>
<h3 id="4使用sapply创建一个数据框">4）使用<code>sapply()</code>创建一个数据框</h3>
<pre><code class="language-R">df1 &lt;- sapply(20, function(n){
  replicate(n, sample(1:100, 1))
}) %&gt;%
  as.data.frame(.) %&gt;%
  dplyr::rename(`0` = V1)
</code></pre>
<h1 id="r-tips">R tips</h1>
<h2 id="str查看对象每一个子对象的类型"><code>str()</code>：查看对象每一个子对象的类型</h2>
<p>R中有非常多的对象，比如</p>
<ul>
<li>data.frame中的每一个变量都是一个子对象，</li>
<li>列表中的每一个<code>$</code>，均为一个子对象</li>
</ul>
<pre><code class="language-R">str(df)
# 'data.frame':   8 obs. of  2 variables:
#  $ grammer: Factor w/ 6 levels &quot;C&quot;,&quot;GO&quot;,&quot;Java&quot;,..: 5 1 3 2 NA 6 4 5
#  $ score  : num  1 2 NA 4 5 6 7 10
</code></pre>
<h2 id="既是占位符也是通配符"><code>.</code>：既是占位符，也是通配符</h2>
<p><code>.</code>在一些情况下，可以充当占位符，比如下列代码的含义为过滤掉<code>salary</code>小于10000的行，且查看过滤后的数据的行数，</p>
<blockquote>
<p>Note：可以类比为Shell中的<code>-</code></p>
</blockquote>
<pre><code class="language-R">df &lt;- read_csv('pandas120.csv')
df %&gt;%
  filter(salary &gt; 10000) %&gt;%
  dim(.) %&gt;%
  .[1]
</code></pre>
<p><code>.</code>的另一种含义为通配符，但是在此处不做过多赘述。</p>
<h2 id="索引的另一种方式"><code>&quot;[&quot;</code>：索引的另一种方式</h2>
<p>直接举例说明，</p>
<pre><code class="language-shell">&quot;[&quot;(c(123, 12, 3), 1)
# 123
&quot;[&quot;(c(123, 12, 3), 2)
# 12
</code></pre>
<h2 id="基于glue的格式化输出">基于<code>glue</code>的格式化输出</h2>
<p>1）使用R包<code>glue</code>（集合于<code>tidyverse</code>中），即可以直接理解为C、Pytohn中的格式化输出（e.g. <code>sprintf</code>）</p>
<p>2）<code>paste(, collapse=)</code> -&gt; <code>.join()</code></p>
<pre><code class="language-R"># library(readr)
# df &lt;- read_csv('600000.SH.csv')
library(glue)
for (i in names(df)){
  if(sum(is.na(df[,'日期'])) != 0){
    res1 &lt;- which(is.na(df[,i]))
    res2 &lt;- paste(res1, collapse = ',')
    print(glue('列名：&quot;{i}&quot;, 第[{res2}]行有缺失值'))
  }
}
</code></pre>
<h1 id="参考资料">参考资料</h1>
<p>[1] <a href="https://www.heywhale.com/mw/project/5f14ff3094d484002d28bbcb?from=zhihur120">R语言数据处理120题</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[To change or not to change？]]></title>
        <id>https://chenyoupu.top/post/to-change-or-no-to-change/</id>
        <link href="https://chenyoupu.top/post/to-change-or-no-to-change/">
        </link>
        <updated>2022-09-16T06:16:26.000Z</updated>
        <content type="html"><![CDATA[<h1 id="part-i-专属于我的弯路">Part I 专属于我的弯路</h1>
<p>其实我一直都保留着，我想要研究做人类方面的研究的想法，一直都有。<br>
但是本科阶段做了很多的傻事，也没有遇到一个好的老师，对我的方向有着怎么样的指引，我现在就正走在属于我的弯路上。</p>
<h1 id="part-ii-规划重要吗">Part II 规划重要吗？</h1>
<p>规划自己的生活重要吗？<br>
虽然开学才短短不到20天，但是我却已经产生了要转硕士/转课题组的想法，<br>
不为什么，<br>
但是也为了什么。</p>
<p>为了想要完成自己曾经不敢去想的事情，为了将自己生命中宝贵的时间，都投入到自己感兴趣的事情上去。<br>
在上一堂课的时候，林老师说，“规划人生不重要，我当年想读生物信息学，但是没有名额，最终现在在做mRNA……”，</p>
<p>引发了我的疑惑，我下课就去问他，<br>
最终具体说了什么我忘了，大概说了一些，“你永远不知道明天会发生什么，明天也有可能直接被车了”、“路上碰到一个女孩，我想让她当我女朋友，最后没有成功，有什么关系呢？？我尽力去做了”，</p>
<p>所以，并不是规划不重要，而是能否接受现实与理想的不同，并继续努力好好生活。<br>
“有时候，就是头脑一热，就干了” —— 林金钟</p>
<h1 id="part-iii-我的反抗-我的自由-我的激情">Part III 我的反抗、我的自由、我的激情</h1>
<p>上面这句话来自加缪。<br>
而我想写一句对应着我自己的话，“我的兴趣、我的坚持、我的义无反顾”。<br>
作为一个小镇错题库，我不知道我是如何成长到现在这样的，<br>
我看了很多的心理学书籍，我看了很多的哲学书籍，我也看了很多我兴趣方面的书籍。<br>
我的父母不理解我想要做什么，大概也已经觉得我走到现在这一步就已经可以了，</p>
<p>但是，我不这样认为。</p>
]]></content>
    </entry>
</feed>